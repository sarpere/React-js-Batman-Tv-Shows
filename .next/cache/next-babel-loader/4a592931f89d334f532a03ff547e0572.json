{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nconst exampleInitialState = {\n  tvShows: null,\n  tvShows_Details: null // TYPES\n\n};\nexport const actionTypes = {\n  SET_TVSHOWS: 'SET_TVSHOWS',\n  SET_TVSHOWS__DETAILS: 'SET_TVSHOWS__DETAILS' // REDUCERS\n\n};\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TVSHOWS:\n      return _Object$assign({}, state, {\n        tvShows: action.payload\n      });\n\n    case actionTypes.SET_TVSHOWS__DETAILS:\n      return state = _objectSpread({}, state, {\n        tvShows_Details: _objectSpread({}, state.tvShows_Details, {\n          [action.Id]: action.payload\n        })\n      });\n\n    default:\n      return state;\n  }\n};\nexport const setTvShows = payload => dispatch => {\n  return dispatch({\n    type: actionTypes.SET_TVSHOWS,\n    payload: payload\n  });\n};\nexport const setTvShowsDetails = (Id, payload) => dispatch => {\n  return dispatch({\n    type: actionTypes.SET_TVSHOWS__DETAILS,\n    payload: payload,\n    Id: Id\n  });\n};\nexport const initStore = (initialState = exampleInitialState) => {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n};","map":null,"metadata":{},"sourceType":"module"}