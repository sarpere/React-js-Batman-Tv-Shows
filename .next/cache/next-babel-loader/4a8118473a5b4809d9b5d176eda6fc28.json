{"ast":null,"code":"var __jsx = React.createElement;\nimport Layout from '../components/MyLayout.js';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { setTvShows } from '../store';\n\nclass Index extends Component {\n  render() {\n    return __jsx(Layout, null, __jsx(\"h1\", null, \"Batman TV Shows\"), __jsx(\"ul\", null, this.props.tvShows && this.props.tvShows.map(({\n      show\n    }) => __jsx(\"li\", {\n      key: show.id\n    }, __jsx(\"div\", {\n      className: \"Show__Image\"\n    }, __jsx(Link, {\n      as: `/Post?id=${show.id}`,\n      href: `/Post?id=${show.id}`\n    }, __jsx(\"img\", {\n      src: show.image.original\n    }))), __jsx(\"div\", {\n      className: \"Show__Info\"\n    }, __jsx(\"div\", {\n      className: \"Show__Header\"\n    }, __jsx(\"p\", {\n      className: \"Show__Title\"\n    }, __jsx(Link, {\n      as: `/Post?id=${show.id}`,\n      href: `/Post?id=${show.id}`\n    }, __jsx(\"a\", {\n      className: \"Text__green\"\n    }, show.name)), \" \"), __jsx(\"p\", {\n      className: \"Show__Title__Note\"\n    }, \" ( \", __jsx(\"span\", {\n      className: \"Text__green\"\n    }, show.network ? show.network.name : \" - \"), \" \", show.network && show.premiered && ', ' + show.premiered.split('-')[0], \" )\")), show.genres && __jsx(\"div\", {\n      className: \"Show__Card\"\n    }, __jsx(\"div\", {\n      className: \"Show__Genres\"\n    }, \"Genres: \"), __jsx(\"div\", {\n      className: \"Genres\"\n    }, \"                        \", show.genres.map(genre => __jsx(\"p\", {\n      key: genre\n    }, genre)))))))));\n  }\n\n}\n\nIndex.getInitialProps = async function ({\n  store\n}) {\n  if (store.getState().tvShows) return 0;\n  const res = await axios.get('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.data;\n  store.dispatch(setTvShows(data));\n  return {\n    data: data\n  };\n};\n\nconst mapStateToProps = ({\n  tvShows\n}) => ({\n  tvShows\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTvShows: bindActionCreators(setTvShows, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":null,"metadata":{},"sourceType":"module"}