{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout.js';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { setTvShows } from '../store';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h1\", null, \"Batman TV Shows\"), __jsx(\"ul\", null, this.props.tvShows && this.props.tvShows.map(function (_ref) {\n        var show = _ref.show;\n        return __jsx(\"li\", {\n          key: show.id\n        }, __jsx(\"div\", {\n          className: \"Show__Image\"\n        }, __jsx(Link, {\n          as: \"/Post?id=\".concat(show.id),\n          href: \"/Post?id=\".concat(show.id)\n        }, __jsx(\"img\", {\n          src: show.image.original\n        }))), __jsx(\"div\", {\n          className: \"Show__Info\"\n        }, __jsx(\"div\", {\n          className: \"Show__Header\"\n        }, __jsx(\"p\", {\n          className: \"Show__Title\"\n        }, __jsx(Link, {\n          as: \"/Post?id=\".concat(show.id),\n          href: \"/Post?id=\".concat(show.id)\n        }, __jsx(\"a\", {\n          className: \"Text__green\"\n        }, show.name)), \" \"), __jsx(\"p\", {\n          className: \"Show__Title__Note\"\n        }, \" ( \", __jsx(\"span\", {\n          className: \"Text__green\"\n        }, show.network ? show.network.name : \" - \"), \" \", show.network && show.premiered && ', ' + show.premiered.split('-')[0], \" )\")), show.genres && __jsx(\"div\", {\n          className: \"Show__Card\"\n        }, __jsx(\"div\", {\n          className: \"Show__Genres\"\n        }, \"Genres: \"), __jsx(\"div\", {\n          className: \"Genres\"\n        }, \"                        \", show.genres.map(function (genre) {\n          return __jsx(\"p\", {\n            key: genre\n          }, genre);\n        })))));\n      })));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var store, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref2.store;\n\n            if (!store.getState().tvShows) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", 0);\n\n          case 3:\n            _context.next = 5;\n            return axios.get('https://api.tvmaze.com/search/shows?q=batman');\n\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.data;\n\n          case 8:\n            data = _context.sent;\n            store.dispatch(setTvShows(data));\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar mapStateToProps = function mapStateToProps(_ref4) {\n  var tvShows = _ref4.tvShows;\n  return {\n    tvShows: tvShows\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setTvShows: bindActionCreators(setTvShows, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":null,"metadata":{},"sourceType":"module"}